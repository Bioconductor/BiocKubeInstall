% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pkg_dependency_graph.R
\name{pkg_dependencies}
\alias{pkg_dependencies}
\title{Create a dependency graph for all Bioconductor packages.}
\usage{
pkg_dependencies(
  version,
  build = c("_software", "_update", "_timings"),
  binary_repo = character(),
  exclude = character(),
  cloud_id = c("local", "google", "azure")
)
}
\arguments{
\item{version}{character() Bioconductor version number.}

\item{build}{character() One of '_software' (rebuild all packages
in the 'BioCsoft' repository) or '_update' (existing binary
packages in `binary_repo` for which newer versions are
available in 'BioCsoft', and packages in 'BioCsoft' that are
not available in `binary_repo`).}

\item{binary_repo}{character() vector of the binary repository in
the form eg. "anvil-rstudio-bioconductor/0.99/3.11"}

\item{exclude}{character() vector of packages to exclude}
}
\value{
'pkg_dependencies()' returns a list of Bioconductor
    packages with the dependencies of the package. If the
    'binary_repo' given has a pre-populated set of packages then
    only the packages that need to updated are in the list.
}
\description{
The function takes in a 'binary_repo' which is a CRAN
    style google bucket. It creates a package dependency graph in
    the form of a 'list()' while excluding R 'base' packages. The
    'binary_repo' needs to be a public google bucket. If you need
    to create a new google bucket in a CRAN style structure, see
    'gcloud_create_cran_bucket()'. If a newly created bucket is
    passed into the function, it will create a full package
    dependency structure for all Biconductor packages.
}
\examples{
\dontrun{
## First way, give it a pre-existing binary repository
## hosted as a google bucket.
deps <- pkg_dependencies(
    binary_repo = "anvil-rstudio-bioconductor/0.99/3.11"
)

## Second way, create a new bucket with no packages in it.
gcloud_create_cran_bucket(
    "gs://my-new-binary-bucket", "1.0",
    "3.11", secret = "/home/mysecret.json",
     public = TRUE
)
deps_new <- pkg_dependencies(
    "_software",
    binary_repo = "my-new-binary-bucket/1.0/3.11"
)
}

}
\seealso{
'gcloud_create_cran_bucket'
}
