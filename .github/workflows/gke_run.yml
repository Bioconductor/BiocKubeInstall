name: Start GKE cluster and build devel then release

## Cluster starts at 12pm on Tuesday, Thursday and Saturday
on: 
  workflow_dispatch:
#   schedule:
#     - cron:  '0 8 * * 2'

env:
  CLUSTER_BASE_NAME: biock8sredis
  GKE_ZONE: us-east1-b
  DEPLOYMENT_NAME: binaryBuilder
  NFS_PD_SIZE: 100Gi
  NODE_DISK_SIZE: 30Gi
  DEVEL_MAJOR_VER: 3
  DEVEL_MINOR_VER: 17
  RELEA_MAJOR_VER: 3
  RELEA_MINOR_VER: 16
  DEVEL_NAMESPACE: devel
  RELEA_NAMESPACE: release
  NODE_TYPE: e2-standard-4

jobs:
  clusterlaunch:
    name: Start GKE cluster
    runs-on: ubuntu-latest
    outputs:
      prefix: ${{ steps.prefix.outputs.prefix }}
    steps:
    - name: Set prefix with date
      id: prefix
      run: echo "::set-output name=prefix::$(echo $(date +'%m-%d-%H-%M-%S'))"

    # Setup gcloud CLI
    - id: 'auth'
      uses: 'google-github-actions/auth@v1'
      with:
        credentials_json: '${{ secrets.GKE_SA_KEY }}'
        project_id: ${{ secrets.GKE_PROJECT }}

    - name: 'Set up Cloud SDK'
      uses: 'google-github-actions/setup-gcloud@v1'

    # Start cluster
    - run: |-
        gcloud container clusters create \
          --zone "$GKE_ZONE" \
          --num-nodes 10 \
          --disk-size="$NODE_DISK_SIZE" \
          --machine-type="$NODE_TYPE" "$CLUSTER_BASE_NAME-${{ steps.prefix.outputs.prefix }}"

    - name: List running cluster
      id: clusterup
      run: |
        CLUSTERLIST=$(gcloud container clusters list --zone $GKE_ZONE)
        CLUSTERLIST="${CLUSTERLIST//'%'/'%25'}"
        CLUSTERLIST="${CLUSTERLIST//$'\n'/'%0A'}"
        CLUSTERLIST="${CLUSTERLIST//$'\r'/'%0D'}"
        echo "::set-output name=log::${CLUSTERLIST}"

    - name: Notify slack channel that cluster is up
      uses: slackapi/slack-github-action@v1.19.0
      with:
        channel-id: 'C024WH42AD7'
        slack-message: "BiocKubeInstall cluster is up: ${{ steps.clusterup.outputs.log }}"
      env:
        SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}

  deploydevelchart:
    name: Deploy devel helm chart and wait
    runs-on: ubuntu-latest
    needs: clusterlaunch
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    # Setup gcloud CLI
    - id: 'auth'
      uses: 'google-github-actions/auth@v1'
      with:
        credentials_json: '${{ secrets.GKE_SA_KEY }}'
        project_id: ${{ secrets.GKE_PROJECT }}

    - name: 'Set up Cloud SDK'
      uses: 'google-github-actions/setup-gcloud@v1'

    - name: Create devel GCP Disk
      run: gcloud compute disks create "biockubeinstall-nfs-pd-${{needs.clusterlaunch.outputs.prefix}}-devel" --size $NFS_PD_SIZE --zone "$GKE_ZONE"

    # Get the GKE credentials so we can deploy to the cluster
    - run: |-
       gcloud container clusters get-credentials "$CLUSTER_BASE_NAME-${{needs.clusterlaunch.outputs.prefix}}" --zone "$GKE_ZONE"

    # Install helm
    - name: Install Helm
      run: |
        curl https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3 | bash

    - name: Create secret for devel namespace
      run: |-
        echo "$GKE_SA_KEY" > bioc-binaries.json && \
        kubectl create namespace $DEVEL_NAMESPACE && \
        kubectl create secret generic -n $DEVEL_NAMESPACE bioc-binaries-service-account-auth \
          --from-file=service_account_key=bioc-binaries.json
      shell: bash
      env:
        GKE_SA_KEY: ${{secrets.GKE_SA_KEY}}

    - name: Deploy bioc devel helm chart
      run: |
        helm install biock8sredis -n $DEVEL_NAMESPACE --set workers.poolSize=50 \
          --timeout 600s \
          --set biocVersion="${DEVEL_MAJOR_VER}.${DEVEL_MINOR_VER}" \
          --set workers.image.tag="RELEASE_${DEVEL_MAJOR_VER}_${DEVEL_MINOR_VER}" \
          --set persistence.size=$NFS_PD_SIZE \
          --set persistence.gcpPdName="biockubeinstall-nfs-pd-${{needs.clusterlaunch.outputs.prefix}}-devel" inst/helm-chart --wait

    - name: check
      run: |
        kubectl -n $DEVEL_NAMESPACE get all

    # Requires kubectl client version > 1.23
    - name: Get logs and events
      run: sh -c "while true; do kubectl -n $DEVEL_NAMESPACE logs manager > /tmp/logs && echo 'Tail of logs:' && tail /tmp/logs && echo 'GREP of errors:' && grep 'Error' /tmp/logs && sleep 5; done" & kubectl -n $DEVEL_NAMESPACE  wait --for=jsonpath='{.status.phase}'=Succeeded --timeout=36000s pod/manager
      continue-on-error: true

    - name: Helm delete the devel
      run: helm delete biock8sredis -n $DEVEL_NAMESPACE
      continue-on-error: true

    # Delete devel pd
    - run: gcloud compute disks delete --zone "$GKE_ZONE" --quiet $(gcloud compute disks list --format="value(name)" --filter='status~READY' --filter='name~biockubeinstall-nfs-pd-${{needs.clusterlaunch.outputs.prefix}}-devel')
      continue-on-error: true


  deployreleasechart:
    name: Deploy release helm chart and wait
    runs-on: ubuntu-latest
    needs: [clusterlaunch,deploydevelchart]
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    # Setup gcloud CLI
    - id: 'auth'
      uses: 'google-github-actions/auth@v1'
      with:
        credentials_json: '${{ secrets.GKE_SA_KEY }}'
        project_id: ${{ secrets.GKE_PROJECT }}

    - name: 'Set up Cloud SDK'
      uses: 'google-github-actions/setup-gcloud@v1'

    - name: Create release GCP Disk
      run: gcloud compute disks create "biockubeinstall-nfs-pd-${{needs.clusterlaunch.outputs.prefix}}-release" --size $NFS_PD_SIZE --zone "$GKE_ZONE"

    # Get the GKE credentials so we can deploy to the cluster
    - run: |-
       gcloud container clusters get-credentials "$CLUSTER_BASE_NAME-${{needs.clusterlaunch.outputs.prefix}}" --zone "$GKE_ZONE"

    # Install helm
    - name: Install Helm
      run: |
        curl https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3 | bash

    - name: Create secret for release namespace
      run: |-
        echo "$GKE_SA_KEY" > bioc-binaries.json && \
        kubectl create namespace $RELEA_NAMESPACE && \
        kubectl create secret generic -n $RELEA_NAMESPACE bioc-binaries-service-account-auth \
          --from-file=service_account_key=bioc-binaries.json
      shell: bash
      env:
        GKE_SA_KEY: ${{secrets.GKE_SA_KEY}}

    - name: Deploy bioc release helm chart
      run: |
        helm install biock8sredis -n $RELEA_NAMESPACE --set workers.poolSize=50 \
          --timeout 600s \
          --set biocVersion="${RELEA_MAJOR_VER}.${RELEA_MINOR_VER}" \
          --set workers.image.tag="RELEASE_${RELEA_MAJOR_VER}_${RELEA_MINOR_VER}" \
          --set persistence.size=$NFS_PD_SIZE \
          --set persistence.gcpPdName="biockubeinstall-nfs-pd-${{needs.clusterlaunch.outputs.prefix}}-release" inst/helm-chart --wait

    - name: check
      run: |
        kubectl -n $RELEA_NAMESPACE get all

    # Requires kubectl client version > 1.23
    - name: Get logs and events
      run: sh -c "while true; do kubectl -n $RELEA_NAMESPACE logs manager > /tmp/logs && echo 'Tail of logs:' && tail /tmp/logs && echo 'GREP of errors:' && grep 'Error' /tmp/logs && sleep 5; done" & kubectl -n $RELEA_NAMESPACE wait --for=jsonpath='{.status.phase}'=Succeeded --timeout=36000s pod/manager
      continue-on-error: true
    
    # Let chart do any cleanup if needed
    - name: Delete chart
      run: helm delete biock8sredis -n $RELEA_NAMESPACE
      continue-on-error: true

    # Delete release pd
    - run: gcloud compute disks delete --zone "$GKE_ZONE" --quiet $(gcloud compute disks list --format="value(name)" --filter='status~READY' --filter='name~biockubeinstall-nfs-pd-${{needs.clusterlaunch.outputs.prefix}}-release')
      continue-on-error: true

  cleanup:
    name: Cleanup GKE cluster
    if: always()
    needs: [clusterlaunch,deploydevelchart,deployreleasechart]
    runs-on: ubuntu-latest
    steps:
    - uses: google-github-actions/setup-gcloud@v0
      with:
        version: '290.0.1'
        service_account_key: ${{ secrets.GKE_SA_KEY }}
        project_id: ${{ secrets.GKE_PROJECT }}

    # Set kubeconfig
    - run: gcloud container clusters get-credentials "$CLUSTER_BASE_NAME-${{needs.clusterlaunch.outputs.prefix}}" --zone "$GKE_ZONE"
      continue-on-error: true

    # Delete cluster
    - run: gcloud container clusters delete "$CLUSTER_BASE_NAME-${{needs.clusterlaunch.outputs.prefix}}" --zone "$GKE_ZONE" --quiet

    # Delete devel pd
    - run: gcloud compute disks delete --zone "$GKE_ZONE" --quiet $(gcloud compute disks list --format="value(name)" --filter='status~READY' --filter='name~biockubeinstall-nfs-pd-${{needs.clusterlaunch.outputs.prefix}}-devel')
      continue-on-error: true
    # Delete release pd
    - run: gcloud compute disks delete --zone "$GKE_ZONE" --quiet $(gcloud compute disks list --format="value(name)" --filter='status~READY' --filter='name~biockubeinstall-nfs-pd-${{needs.clusterlaunch.outputs.prefix}}-release')
      continue-on-error: true

    - name: List running cluster
      id: clusterstillup
      run: |
        CLUSTERLIST=$(gcloud container clusters list --zone $GKE_ZONE)
        CLUSTERLIST="${CLUSTERLIST//'%'/'%25'}"
        CLUSTERLIST="${CLUSTERLIST//$'\n'/'%0A'}"
        CLUSTERLIST="${CLUSTERLIST//$'\r'/'%0D'}"
        echo "::set-output name=log::${CLUSTERLIST}"

    - name: Notify slack channel that cluster is up
      uses: slackapi/slack-github-action@v1.19.0
      with:
        channel-id: 'C024WH42AD7'
        slack-message: "All clusters should be down. If any clusters are still up, they should be shut down manually. BiocKubeInstall clusters still up: ${{ steps.clusterstillup.outputs.log }}"
      env:
        SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}

